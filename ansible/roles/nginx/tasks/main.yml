---

  - name: Fail if nginx proxy is enabled but permissions file path is not defined
    fail: msg="basic auth file for nginx can't be generated without permissions file locally, define - permissions_file_local_path"
    when: permissions_file_local_path is not defined or permissions_file_local_path | trim == ''

  - name: Create a temp dir for nginx basic auth credentials file generation
    local_action: shell mktemp -d
    always_run: yes # run during check mode
    run_once: yes
    register: mktemp
    notify: clean mktemp
    tags:
      - nginx

  - name: Download nginx release
    get_url: url="{{nginx_release_url}}" dest="{{tmp_dir}}"
    become: yes
    tags:
      - install
      - nginx 

  - name: try to stop nginx proxy if it is already running
    command: /usr/local/nginx/sbin/nginx -s stop
    become: yes
    ignore_errors: yes
    tags:
      - nginx 

  - name: Untar nginx package
    unarchive: copy=no dest="{{tmp_dir}}" src="{{tmp_dir}}/{{nginx_pkg_tar}}"
    become: yes
    tags:
      - install
      - nginx 

  - name: Install nginx dependencies
    apt: name={{ item }} state=present
    with_items: "{{ nginx_package_deps }}"
    become: yes
    tags:
      - packages
      - nginx

  - name: configure and install nginx with auth_request module
    command: chdir={{tmp_dir}}/{{nginx_pkg}} {{item}}
    with_items:
      - ./configure --with-http_auth_request_module 
      - make 
      - make install
    become: yes
    tags:
      - install
      - nginx 

  - name: Remove the old basic auth file if it already exists
    file: path={{mktemp.stdout}}/{{nginx_basic_auth_file_name}} state=absent
    become: yes
    tags:
      - install
      - nginx 

  - name: Generate nginx basic auth file if nginx_proxy_enable is set && it requires permissions file locally
    local_action: shell python {{ role_path }}/files/generate_nginx_basic_auth_file.py {{permissions_file_local_path}} {{mktemp.stdout}}/{{nginx_basic_auth_file_name}}
    always_run: yes # run during check mode
    run_once: yes
    tags:
      - configuration
      - nginx 

  - name: Copy basic auth credentials file to the nginx conf
    copy: src={{mktemp.stdout}}/{{nginx_basic_auth_file_name}} dest="{{nginx_conf_dir}}/{{nginx_basic_auth_file_name}}"  mode=0644
    become: yes
    tags:
      - install
      - nginx 

  - name: Copy AAA daemon to nginx conf directory for now
    copy: src=../../../../aaad dest={{nginx_conf_dir}}  mode=0655
    become: yes
    tags:
      - install
      - nginx 

  - name: Configure aaad upstart job
    template: src=aaad.conf.j2 dest=/etc/init/aaad.conf owner=root group=root mode=0600
    become: yes
    tags:
      - nginx
      - aaa daemon


  - name: create directory to put different sites config
    file: path="{{nginx_conf_dir}}/sites-available" state=directory
    become: yes
    tags:
      - install
      - nginx 

  - name: create a directory to hold symlink to the default site config
    file: path="{{nginx_conf_dir}}/sites-enabled"   state=directory 
    become: yes
    tags:
      - install
      - nginx 

  - name: copy proxy config to sites-available
    template: src=rogeros_auth_proxy.conf.j2 dest="{{nginx_conf_dir}}/sites-available/rogeros_auth_proxy.conf" mode=0644
    become: yes
    tags:
      - install
      - nginx 

  - name: symlink proxy config to default site
    file: src="{{nginx_conf_dir}}/sites-available/rogeros_auth_proxy.conf" dest="{{nginx_conf_dir}}/sites-enabled/default" state=link
    become: yes
    tags:
      - install
      - nginx 

  - name: copy nginx conf file
    template: src=nginx.conf.j2 dest={{nginx_conf_dir}}/nginx.conf  mode=0644
    become: yes
    tags:
      - install
      - nginx

  - name: start nginx proxy for rogeros auth 
    command: /usr/local/nginx/sbin/nginx 
    become: yes
    tags:
      - nginx 

  - name: stop aaa daemon, it will fail when aaad is not running so ignore the error
    command: stop aaad 
    become: yes
    ignore_errors: yes
    tags:
      - nginx 
      - aaad

  - name: start aaa daemon
    command: start aaad
    become: yes
    tags:
      - nginx 
      - aaad

